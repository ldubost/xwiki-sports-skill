<?xml version="1.0" encoding="UTF-8"?>

<xwikidoc version="1.3" reference="Sports.Code.Top14" locale="">
  <web>Sports.Code</web>
  <name>Top14</name>
  <language/>
  <defaultLanguage>en</defaultLanguage>
  <translation>0</translation>
  <creator>xwiki:XWiki.Admin</creator>
  <creationDate>1546297200000</creationDate>
  <parent>WebHome</parent>
  <author>xwiki:XWiki.Admin</author>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <date>1546297200000</date>
  <contentUpdateDate>1546297200000</contentUpdateDate>
  <version>1.1</version>
  <title>Top14</title>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>true</hidden>
  <content>// {{groovy}}
import groovy.json.JsonOutput;
import org.joda.time.format.DateTimeFormat;

public class Rugby {
  def xwiki;
  def xcontext;
  def request;
  def response;
  def sports;

  def addDebug(str) {
    sports.addDebug(str);
  }

  def setXWiki(xwiki, xcontext, sports) {
    this.xwiki = xwiki;
    this.xcontext = xcontext;
    this.request = xcontext.request;
    this.response = xcontext.response;
    this.sports = sports;
  }

  def cleanScore(score) {
    return score.replaceAll("\\u2013", " ");
  }
  
  def cleanNumber(nb) {
    return nb.replaceAll("[a-z]", "")
  }

  def getResults(data, currentPlayer, source) {
    def cacheId = data.hashCode();
    def games = []

    if (sports.cache.get(cacheId)!=null &amp;&amp; (request!=null &amp;&amp; !request.force)) {
      addDebug("From cache");
      games = sports.cache.get(cacheId);
    } else {
      /* Sample output 
{{Phase finale à 6
|largeur équipes=220
|fontsize= 95%
|fond titres=cccccc
|Q-titre='''Barrages'''
|Q1-info= {{date sport|31|mai|2019|en rugby à XV}} au [[Stade olympique Yves-du-Manoir|Stade Yves-du-Manoir]], [[Colombes]]  
|Q1-E1=[4] [[Racing 92]]
|Q1-S1= 13
|Q1-E2=[5] '''[[Stade rochelais]]'''
|Q1-S2= '''19'''
|Q1-v=2
|Q2-info= {{date sport|1er|juin|2019|en rugby à XV}} au [[Matmut Stadium Gerland]], [[Lyon]] 
|Q2-E1=[3] '''[[Lyon olympique universitaire rugby|Lyon OU]]'''
|Q2-S1='''21'''
|Q2-E2=[6] [[Montpellier Hérault rugby|Montpellier HR]]
|Q2-S2= 16
|Q2-v=1
|D1-info={{date sport|8|juin|2019|en rugby à XV}} au [[Matmut Atlantique]], [[Bordeaux]]
|D1-E1=[1] '''[[Stade toulousain]]'''
|D1-S1= '''20'''
|D1-E2=[5] [[Stade rochelais]]
|D1-S2= 6
|D1-v= 1
|D2-info={{date sport|9|juin|2019|en rugby à XV}} au [[Matmut Atlantique]], [[Bordeaux]]
|D2-E1=[2] '''[[ASM Clermont Auvergne|ASM Clermont]]'''
|D2-S1= '''33'''
|D2-E2=[3] [[Lyon olympique universitaire rugby|Lyon OU]] 
|D2-S2= 13
|D2-v= 1
|F1-info={{date sport|15|juin|2019|en rugby à XV}} au [[Stade de France]], [[Saint-Denis (Seine-Saint-Denis)|Saint-Denis]]
|F1-E1=[1] [[Stade toulousain]]
|F1-S1= 
|F1-E2=[2] [[ASM Clermont Auvergne|ASM Clermont]]
|F1-S2= 
|F1-v= 
}}

{|width="100%" align="center" border="0" cellpadding="0" cellspacing="5" 
|- valign="top" align="left"
| width="50%" | 
;; {{1re|journée}}
&lt;small&gt;''samedi 25 et dimanche 26 août''&lt;/small&gt;
{| class="wikitable gauche" cellpadding="0" cellspacing="0" style="font-size:90%;"
|----
|1||Perpignan||{{bonus|left}}15||{{bonus|right|o}}'''46'''||'''Paris'''||6
|---- 
|10||'''Clermont'''||{{bonus|left|o}}'''67'''||{{bonus|right}}23||Agen||2
|----
|1||Lyon||{{bonus|left}}16||{{bonus|right}}16||Toulouse||1
|----
|4||'''Bordeaux-Bègles'''||{{bonus|left|o}}'''41'''||{{bonus|right}}19||Pau||1 
|---- 
|4||'''La Rochelle'''||{{bonus|left}}'''28'''||{{bonus|right}}21||Grenoble||2
|----
|0||Toulon||{{bonus|left}}9||{{bonus|right|o}}'''25'''||'''Racing 92'''||3
|---- style="border-top:2px solid black;"
|2||Montpellier||{{bonus|left|d}}20||{{bonus|right}}'''25'''||'''Castres'''||3
|}
*/
      def df = DateTimeFormat.forPattern('d-MMM-yyyy').withLocale(new Locale("fr"))
      def m = data =~ /(?ms)\{\{Phase finale.*?\n(.*?)\n\}\}/
      addDebug("Found: " + m.count + " items");
       (0..&lt;m.count).each {
         def matchData = m[it][1];
         def matchMap = [:]
         def m2 = matchData =~ /\|(.*?)=(.*)/
         (0..&lt;m2.count).each {
            matchMap.put(m2[it][1].trim(), m2[it][2].trim())
         }  
         addDebug("Found: {{{ ${matchMap} }}}")
         for (gameName in ["Q1", "Q2" , "D1", "D2", "F1"]) {
           def game = [:]
           def p1m = (matchMap.get(gameName + "-E1") =~ /.*?\[\[(.*?)(\]|\|).*/)
           game.player1 = p1m.count&gt;0 ? p1m[0][1] : ""
           def p2m = (matchMap.get(gameName + "-E2") =~ /.*?\[\[(.*?)(\]|\|).*/)
           game.player2 = p2m.count&gt;0 ? p2m[0][1] : ""
           game.title = game.player1 + " vs " + game.player2
           def score1 = matchMap.get(gameName + "-S1");
           score1 = (score1==null) ? "" : score1.replaceAll("'","").trim()
           def score2 = matchMap.get(gameName + "-S2");
           score2 = (score2==null) ? "" : score2.replaceAll("'","").trim()
           if (score1=="" &amp;&amp; score2=="") {
             game.future = true;
           } else {
             game.finished = true;
           }
           game.score = score1 + " - " + score2
           def goal1 = (score1=="") ? 0 : Integer.parseInt(score1)
           def goal2 = (score2=="") ? 0 : Integer.parseInt(score2)
           if (goal1&gt;goal2)
              game.winner = game.player1
           if (goal2&gt;goal1)
              game.winner = game.player2
           game.level = gameName.substring(0,1);
           def info = matchMap.get(gameName + "-info")
           // |D2-info={{date sport|9|juin|2019|en rugby à XV}} au [[Matmut Atlantique]], [[Bordeaux]]
           def dm = info =~ /\{\{date.*?\|(.*?)\|(.*?)\|(.*?)\|(.*)/
           def sdate = (dm.count&gt;0) ? (cleanNumber(dm[0][1]) + "-" + dm[0][2] + "-" + cleanNumber(dm[0][3])) : ""
           game.gameDate = df.parseDateTime(sdate).toDate()
           games.add(game)
           addDebug("Found: ${game}")
         }
       }

      sports.cache.put(cacheId, games);
    }
    return games;
  }
}
// {{/groovy}}</content>
</xwikidoc>
